text = element_text(family = "Arial"),
legend.text = element_text(size = 20)) +
guides(size = FALSE)
ggmap(map) +
#scalebar
ggsn::scalebar(x.min = 77.220, x.max = 77.240,
y.min = 28.685, y.max = 28.705,
dist = 0.25, dist_unit = "km", transform = TRUE, model = 'WGS84',
box.fill = "white",
box.color = "#78909c",
st.color = "white",
location = "bottomleft",
st.size = 6) +
#add interpolated data
geom_tile(data = y, aes(x = lon, y = lat, fill = do_pred)) +
scale_fill_viridis(limits = c(0,5.5), breaks = c(0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,5,5.5), name = "",
option = "plasma", begin = 0.2, direction = -1) + #make sure to edit the scaale here
xlab("") + ylab("") +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key.width = unit(3.7,"cm"),
legend.margin = margin(10,0,0,0), #top, right, bottom, left
legend.justification = "left",
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
text = element_text(family = "Arial"),
legend.text = element_text(size = 20)) +
guides(size = FALSE)
ggmap(map) +
#scalebar
ggsn::scalebar(x.min = 77.220, x.max = 77.240,
y.min = 28.685, y.max = 28.705,
dist = 0.25, dist_unit = "km", transform = TRUE, model = 'WGS84',
box.fill = "white",
box.color = "#78909c",
st.color = "white",
location = "bottomright",
st.size = 6) +
#add interpolated data
geom_tile(data = y, aes(x = lon, y = lat, fill = do_pred)) +
scale_fill_viridis(limits = c(0,5.5), breaks = c(0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,5,5.5), name = "",
option = "plasma", begin = 0.2, direction = -1) + #make sure to edit the scaale here
xlab("") + ylab("") +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key.width = unit(3.7,"cm"),
legend.margin = margin(10,0,0,0), #top, right, bottom, left
legend.justification = "left",
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
text = element_text(family = "Arial"),
legend.text = element_text(size = 20)) +
guides(size = FALSE)
ggmap(map) +
#scalebar
ggsn::scalebar(x.min = 77.220, x.max = 77.240,
y.min = 28.685, y.max = 28.705,
dist = 0.25, dist_unit = "km", transform = TRUE, model = 'WGS84',
box.fill = "white",
box.color = "#78909c",
st.color = "white",
location = "bottomright",
st.size = 6) +
#add interpolated data
geom_tile(data = y, aes(x = lon, y = lat, fill = do_pred)) +
scale_fill_viridis(limits = c(0,5.5), breaks = c(0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,5,5.5), name = "",
option = "plasma", begin = 0.2, direction = -1) + #make sure to edit the scaale here
xlab("") + ylab("") +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key.width = unit(4,"cm"),
legend.margin = margin(10,0,0,0), #top, right, bottom, left
legend.justification = "left",
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
text = element_text(family = "Arial"),
legend.text = element_text(size = 20)) +
guides(size = FALSE)
#use the same prediction grid for all
ymna_grid <- spsample(ymna_spdf_a, type = "regular", cellsize = c(0.0001,0.0001)) #cellsize determines resolution
gridded(ymna_grid) = TRUE
plot(ymna_grid)
#run interpolation
jul6_krig <- autoKrige(ymna_spdf_a, ymna_grid)
#rasterize & clip interpolation results (for each date)
ymna_krig_raster <- raster(jul6_krig$krige_output)
clipped_raster <- mask(ymna_krig_raster, ymna_poly) #clip the interpolated area
y <- rasterToPoints(clipped_raster) #convert back into spatialPoints
#plot with ggmap() + geom_tile() accepts only data frames
y <- as.data.frame(y)
View(jul6_krig)
#rasterize & clip interpolation results (for each date)
jul6_krig$krige_output
#rasterize & clip interpolation results (for each date)
krig$krige_output
#rasterize & clip interpolation results (for each date)
jul6_krig$krige_output
#rasterize & clip interpolation results (for each date)
plot(jul6_krig$krige_output)
#rasterize & clip interpolation results (for each date)
raster(jul6_krig$krige_output)
#rasterize & clip interpolation results (for each date)
rasterToPoints(raster(jul6_krig$krige_output))
#rasterize & clip interpolation results (for each date)
plot(ymna_poly)
#rasterize & clip interpolation results (for each date)
plot(raster(ymna_poly))
#rasterize & clip interpolation results (for each date)
ymna_krig_raster <- raster(jul6_krig$krige_output)
ymna_poly_raster <- raster(ymna_poly)
clipped_raster <- mask(ymna_krig_raster, ymna_poly) #clip the interpolated area
y <- rasterToPoints(clipped_raster) #convert back into spatialPoints
#plot with ggmap() + geom_tile() accepts only data frames
y <- as.data.frame(y)
names(y) <- c("lon", "lat", "do_pred")
ggmap(map) +
#scalebar
ggsn::scalebar(x.min = 77.220, x.max = 77.240,
y.min = 28.685, y.max = 28.705,
dist = 0.25, dist_unit = "km", transform = TRUE, model = 'WGS84',
box.fill = "white",
box.color = "#78909c",
st.color = "white",
location = "bottomright",
st.size = 6) +
#add interpolated data
geom_tile(data = y, aes(x = lon, y = lat, fill = do_pred)) +
scale_fill_viridis(limits = c(0,5.5), breaks = c(0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,5,5.5), name = "",
option = "plasma", begin = 0.2, direction = -1) + #make sure to edit the scaale here
xlab("") + ylab("") +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key.width = unit(4,"cm"),
legend.margin = margin(10,0,0,0), #top, right, bottom, left
legend.justification = "left",
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
text = element_text(family = "Arial"),
legend.text = element_text(size = 20)) +
guides(size = FALSE)
ymna_krig_raster <- raster(as.data.frame(jul6_krig$krige_output))
#plot with ggmap() + geom_tile() accepts only data frames
y <- as.data.frame(jul6_krig$krige_output)
names(y) <- c("lon", "lat", "do_pred")
ggmap(map) +
#scalebar
ggsn::scalebar(x.min = 77.220, x.max = 77.240,
y.min = 28.685, y.max = 28.705,
dist = 0.25, dist_unit = "km", transform = TRUE, model = 'WGS84',
box.fill = "white",
box.color = "#78909c",
st.color = "white",
location = "bottomright",
st.size = 6) +
#add interpolated data
geom_tile(data = y, aes(x = lon, y = lat, fill = do_pred)) +
scale_fill_viridis(limits = c(0,5.5), breaks = c(0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,5,5.5), name = "",
option = "plasma", begin = 0.2, direction = -1) + #make sure to edit the scaale here
xlab("") + ylab("") +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key.width = unit(4,"cm"),
legend.margin = margin(10,0,0,0), #top, right, bottom, left
legend.justification = "left",
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
text = element_text(family = "Arial"),
legend.text = element_text(size = 20)) +
guides(size = FALSE)
#use the same prediction grid for all
ymna_grid <- spsample(ymna_spdf_a, type = "regular", cellsize = c(0.00001,0.00001)) #cellsize determines resolution
gridded(ymna_grid) = TRUE
#run interpolation
jul6_krig <- autoKrige(ymna_spdf_a, ymna_grid)
ymna_krig_raster <- raster(jul6_krig$krige_output)
clipped_raster <- mask(ymna_krig_raster, ymna_poly) #clip the interpolated area
y <- rasterToPoints(clipped_raster) #convert back into spatialPoints
#plot with ggmap() + geom_tile() accepts only data frames
y <- as.data.frame(y)
names(y) <- c("lon", "lat", "do_pred")
ggmap(map) +
#scalebar
ggsn::scalebar(x.min = 77.220, x.max = 77.240,
y.min = 28.685, y.max = 28.705,
dist = 0.25, dist_unit = "km", transform = TRUE, model = 'WGS84',
box.fill = "white",
box.color = "#78909c",
st.color = "white",
location = "bottomright",
st.size = 6) +
#add interpolated data
geom_tile(data = y, aes(x = lon, y = lat, fill = do_pred)) +
scale_fill_viridis(limits = c(0,5.5), breaks = c(0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,5,5.5), name = "",
option = "plasma", begin = 0.2, direction = -1) + #make sure to edit the scaale here
xlab("") + ylab("") +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key.width = unit(4,"cm"),
legend.margin = margin(10,0,0,0), #top, right, bottom, left
legend.justification = "left",
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
text = element_text(family = "Arial"),
legend.text = element_text(size = 20)) +
guides(size = FALSE)
map <- get_map(location = c(lon = 77.23, lat = 28.695), source = "google", zoom = 14, maptype = "satellite")
ggmap(map)
#use the same prediction grid for all
ymna_grid <- spsample(ymna_spdf_a, type = "regular", cellsize = c(0.0001,0.0001)) #cellsize determines resolution
gridded(ymna_grid) = TRUE
#run interpolation
jul6_krig <- autoKrige(ymna_spdf_a, ymna_grid)
#rasterize & clip interpolation results (for each date)
ymna_krig_raster <- raster(jul6_krig$krige_output)
clipped_raster <- mask(ymna_krig_raster, ymna_poly) #clip the interpolated area
y <- rasterToPoints(clipped_raster) #convert back into spatialPoints
#plot with ggmap() + geom_tile() accepts only data frames
y <- as.data.frame(y)
names(y) <- c("lon", "lat", "do_pred")
ggmap(map) +
#scalebar
ggsn::scalebar(x.min = 77.21, x.max = 77.25,
y.min = 28.68, y.max = 28.71,
dist = 0.5, dist_unit = "km", transform = TRUE, model = 'WGS84',
box.fill = "white",
box.color = "#78909c",
st.color = "white",
location = "bottomright",
st.size = 6) +
#add interpolated data
geom_tile(data = y, aes(x = lon, y = lat, fill = do_pred)) +
scale_fill_viridis(limits = c(0,5.5), breaks = c(0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,5,5.5), name = "",
option = "plasma", begin = 0.2, direction = -1) + #make sure to edit the scaale here
xlab("") + ylab("") +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key.width = unit(4,"cm"),
legend.margin = margin(10,0,0,0), #top, right, bottom, left
legend.justification = "left",
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
text = element_text(family = "Arial"),
legend.text = element_text(size = 20)) +
guides(size = FALSE)
ggmap(map) +
#scalebar
ggsn::scalebar(x.min = 77.21, x.max = 77.25,
y.min = 28.68, y.max = 28.71,
dist = 0.5, dist_unit = "km", transform = TRUE, model = 'WGS84',
box.fill = "white",
box.color = "#78909c",
st.color = "white",
location = "bottomright",
st.size = 6) +
#add interpolated data
geom_tile(data = y, aes(x = lon, y = lat, fill = do_pred)) +
scale_fill_viridis(limits = c(0,5.5), breaks = c(0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,5,5.5), name = "",
option = "plasma", begin = 0.2, direction = -1) + #make sure to edit the scaale here
xlab("") + ylab("") +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key.width = unit(4.2,"cm"),
legend.margin = margin(10,0,0,0), #top, right, bottom, left
legend.justification = "left",
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
text = element_text(family = "Arial"),
legend.text = element_text(size = 20)) +
guides(size = FALSE)
ggmap(map) +
#scalebar
ggsn::scalebar(x.min = 77.21, x.max = 77.25,
y.min = 28.68, y.max = 28.71,
dist = 0.5, dist_unit = "km", transform = TRUE, model = 'WGS84',
box.fill = "white",
box.color = "#78909c",
st.color = "white",
location = "bottomright",
st.size = 6) +
#add interpolated data
geom_tile(data = y, aes(x = lon, y = lat, fill = do_pred)) +
scale_fill_viridis(limits = c(0,5.5), breaks = c(0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,5,5.5), name = "",
option = "plasma", begin = 0.2, direction = -1) + #make sure to edit the scaale here
xlab("") + ylab("") +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key.width = unit(4,"cm"),
legend.margin = margin(10,0,0,0), #top, right, bottom, left
legend.justification = "left",
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
text = element_text(family = "Arial"),
legend.text = element_text(size = 20)) +
guides(size = FALSE)
#rasterize & clip interpolation results (for each date)
ymna_krig_raster <- raster(jul10_krig$krige_output)
clipped_raster <- mask(ymna_krig_raster, ymna_poly) #clip the interpolated area
y <- rasterToPoints(clipped_raster) #convert back into spatialPoints
#plot with ggmap() + geom_tile() accepts only data frames
y <- as.data.frame(y)
names(y) <- c("lon", "lat", "do_pred")
ggmap(map) +
#scalebar
ggsn::scalebar(x.min = 77.21, x.max = 77.25,
y.min = 28.68, y.max = 28.71,
dist = 0.5, dist_unit = "km", transform = TRUE, model = 'WGS84',
box.fill = "white",
box.color = "#78909c",
st.color = "white",
location = "bottomright",
st.size = 6) +
#add interpolated data
geom_tile(data = y, aes(x = lon, y = lat, fill = do_pred)) +
scale_fill_viridis(limits = c(0,5.5), breaks = c(0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,5,5.5), name = "",
option = "plasma", begin = 0.2, direction = -1) + #make sure to edit the scaale here
xlab("") + ylab("") +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key.width = unit(4,"cm"),
legend.margin = margin(10,0,0,0), #top, right, bottom, left
legend.justification = "left",
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
text = element_text(family = "Arial"),
legend.text = element_text(size = 20)) +
guides(size = FALSE)
jul10_krig <- autoKrige(ymna_spdf_b, ymna_grid)
jul11_krig <- autoKrige(ymna_spdf_c, ymna_grid)
#rasterize & clip interpolation results (for each date)
ymna_krig_raster <- raster(jul11_krig$krige_output)
ymna_poly_raster <- raster(ymna_poly)
clipped_raster <- mask(ymna_krig_raster, ymna_poly) #clip the interpolated area
y <- rasterToPoints(clipped_raster) #convert back into spatialPoints
#plot with ggmap() + geom_tile() accepts only data frames
y <- as.data.frame(y)
names(y) <- c("lon", "lat", "do_pred")
ggmap(map) +
#scalebar
ggsn::scalebar(x.min = 77.21, x.max = 77.25,
y.min = 28.68, y.max = 28.71,
dist = 0.5, dist_unit = "km", transform = TRUE, model = 'WGS84',
box.fill = "white",
box.color = "#78909c",
st.color = "white",
location = "bottomright",
st.size = 6) +
#add interpolated data
geom_tile(data = y, aes(x = lon, y = lat, fill = do_pred)) +
scale_fill_viridis(limits = c(0,5.5), breaks = c(0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,5,5.5), name = "",
option = "plasma", begin = 0.2, direction = -1) + #make sure to edit the scaale here
xlab("") + ylab("") +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key.width = unit(4,"cm"),
legend.margin = margin(10,0,0,0), #top, right, bottom, left
legend.justification = "left",
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
text = element_text(family = "Arial"),
legend.text = element_text(size = 20)) +
guides(size = FALSE)
#use the same prediction grid for all
ymna_grid <- spsample(ymna_spdf_c, type = "regular", cellsize = c(0.0001,0.0001)) #cellsize determines resolution
gridded(ymna_grid) = TRUE
jul11_krig <- autoKrige(ymna_spdf_c, ymna_grid)
#rasterize & clip interpolation results (for each date)
ymna_krig_raster <- raster(jul11_krig$krige_output)
clipped_raster <- mask(ymna_krig_raster, ymna_poly) #clip the interpolated area
y <- rasterToPoints(clipped_raster) #convert back into spatialPoints
#plot with ggmap() + geom_tile() accepts only data frames
y <- as.data.frame(y)
names(y) <- c("lon", "lat", "do_pred")
ggmap(map) +
#scalebar
ggsn::scalebar(x.min = 77.21, x.max = 77.25,
y.min = 28.68, y.max = 28.71,
dist = 0.5, dist_unit = "km", transform = TRUE, model = 'WGS84',
box.fill = "white",
box.color = "#78909c",
st.color = "white",
location = "bottomright",
st.size = 6) +
#add interpolated data
geom_tile(data = y, aes(x = lon, y = lat, fill = do_pred)) +
scale_fill_viridis(limits = c(0,5.5), breaks = c(0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,5,5.5), name = "",
option = "plasma", begin = 0.2, direction = -1) + #make sure to edit the scaale here
xlab("") + ylab("") +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key.width = unit(4,"cm"),
legend.margin = margin(10,0,0,0), #top, right, bottom, left
legend.justification = "left",
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
text = element_text(family = "Arial"),
legend.text = element_text(size = 20)) +
guides(size = FALSE)
map <- get_map(location = c(lon = 81.71, lat = 16.43), source = "google", zoom = 14, maptype = "satellite")
ggmap(map) +
#scalebar
ggsn::scalebar(x.min = 81.69, x.max = 81.73,
y.min = 16.41, y.max = 16.45,
dist = 0.5, dist_unit = "km", transform = TRUE, model = 'WGS84',
box.fill = "white",
box.color = "#78909c",
st.color = "white",
location = "bottomright",
st.size = 6) +
#add interpolated data
geom_tile(data = k, aes(x = lon, y = lat, fill = ec_pred)) +
scale_fill_viridis(limits = c(0,960), breaks = c(0,120,240,360,480,600,720,840,960), name = "",
option = "plasma", begin = 0.2) #make sure to edit the scaale here
ggmap(map) +
#scalebar
ggsn::scalebar(x.min = 81.69, x.max = 81.73,
y.min = 16.41, y.max = 16.45,
dist = 0.5, dist_unit = "km", transform = TRUE, model = 'WGS84',
box.fill = "white",
box.color = "#78909c",
st.color = "white",
location = "bottomright",
st.size = 6) +
#add interpolated data
geom_tile(data = k, aes(x = lon, y = lat, fill = ec_pred)) +
scale_fill_viridis(limits = c(0,960), breaks = c(0,120,240,360,480,600,720,840,960), name = "",
option = "plasma", begin = 0.2) + #make sure to edit the scaale here
xlab("") + ylab("") +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key.width = unit(4,"cm"),
legend.margin = margin(10,0,0,0), #top, right, bottom, left
legend.justification = "left",
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
text = element_text(family = "Arial"),
legend.text = element_text(size = 20)) +
guides(size = FALSE)
map <- get_map(location = c(lon = 81.71, lat = 16.43), source = "google", zoom = 16, maptype = "satellite")
ggmap(map)
map <- get_map(location = c(lon = 81.71, lat = 16.43), source = "google", zoom = 15, maptype = "satellite")
ggmap(map)
map <- get_map(location = c(lon = 81.705, lat = 16.43), source = "google", zoom = 15, maptype = "satellite")
ggmap(map)
map <- get_map(location = c(lon = 81.705, lat = 16.43), source = "google", zoom = 16, maptype = "satellite")
ggmap(map)
map <- get_map(location = c(lon = 81.705, lat = 16.429), source = "google", zoom = 16, maptype = "satellite")
ggmap(map)
ggmap(map) +
#scalebar
ggsn::scalebar(x.min = 81.699, x.max = 81.711,
y.min = 16.4225, y.max = 16.4350,
dist = 0.5, dist_unit = "km", transform = TRUE, model = 'WGS84',
box.fill = "white",
box.color = "#78909c",
st.color = "white",
location = "bottomright",
st.size = 6) +
#add interpolated data
geom_tile(data = k, aes(x = lon, y = lat, fill = ec_pred)) +
scale_fill_viridis(limits = c(0,960), breaks = c(0,120,240,360,480,600,720,840,960), name = "",
option = "plasma", begin = 0.2) + #make sure to edit the scaale here
xlab("") + ylab("") +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key.width = unit(4,"cm"),
legend.margin = margin(10,0,0,0), #top, right, bottom, left
legend.justification = "left",
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
text = element_text(family = "Arial"),
legend.text = element_text(size = 20)) +
guides(size = FALSE)
ggmap(map) +
#scalebar
ggsn::scalebar(x.min = 81.699, x.max = 81.711,
y.min = 16.4225, y.max = 16.4350,
dist = 0.1, dist_unit = "km", transform = TRUE, model = 'WGS84',
box.fill = "white",
box.color = "#78909c",
st.color = "white",
location = "bottomright",
st.size = 6) +
#add interpolated data
geom_tile(data = k, aes(x = lon, y = lat, fill = ec_pred)) +
scale_fill_viridis(limits = c(0,960), breaks = c(0,120,240,360,480,600,720,840,960), name = "",
option = "plasma", begin = 0.2) + #make sure to edit the scaale here
xlab("") + ylab("") +
theme(legend.direction = "horizontal",
legend.position = "bottom",
legend.key.width = unit(4,"cm"),
legend.margin = margin(10,0,0,0), #top, right, bottom, left
legend.justification = "left",
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
text = element_text(family = "Arial"),
legend.text = element_text(size = 20)) +
guides(size = FALSE)
